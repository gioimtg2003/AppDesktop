// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QuanLyKho;

#nullable disable

namespace QuanLyKho.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20231118172531_m3")]
    partial class m3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QuanLyKho.Model.Administrator", b =>
                {
                    b.Property<int>("AdministratorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdministratorID"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("char(16)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("char(20)");

                    b.HasKey("AdministratorID");

                    b.ToTable("Administrators");

                    b.HasData(
                        new
                        {
                            AdministratorID = 1,
                            Email = "Conggioi.pro264@gmail.com",
                            Name = "Nguyễn Công Giới",
                            Password = "admin",
                            Phone = "0367093723",
                            Role = (byte)1,
                            Title = "Quản lý",
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("QuanLyKho.Model.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("char(10)");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("QuanLyKho.Model.ExportBill", b =>
                {
                    b.Property<int>("ExportBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportBillID"));

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("Date");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ExportBillID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("CustomerID");

                    b.ToTable("ExportBills");
                });

            modelBuilder.Entity("QuanLyKho.Model.ExportBillDetail", b =>
                {
                    b.Property<int>("ExportBillDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExportBillDetailID"));

                    b.Property<int>("ExportBillID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockDetailID")
                        .HasColumnType("int");

                    b.HasKey("ExportBillDetailID");

                    b.HasIndex("ExportBillID");

                    b.HasIndex("StockDetailID");

                    b.ToTable("ExportBillDetails");
                });

            modelBuilder.Entity("QuanLyKho.Model.ImportBill", b =>
                {
                    b.Property<int>("ImportBillID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportBillID"));

                    b.Property<int>("AdministratorID")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("Date");

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.HasKey("ImportBillID");

                    b.HasIndex("AdministratorID");

                    b.HasIndex("CustomerID");

                    b.HasIndex("StockID");

                    b.ToTable("ImportBills");
                });

            modelBuilder.Entity("QuanLyKho.Model.ImportDetail", b =>
                {
                    b.Property<int>("ImportDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ImportDetailID"));

                    b.Property<int>("ImportBillID")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitID")
                        .HasColumnType("int");

                    b.HasKey("ImportDetailID");

                    b.HasIndex("ImportBillID");

                    b.HasIndex("ProductID");

                    b.HasIndex("UnitID");

                    b.ToTable("ImportDetail");
                });

            modelBuilder.Entity("QuanLyKho.Model.Product", b =>
                {
                    b.Property<long>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("ProductID"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1L,
                            Description = "Bút bi Thiên Long 20Cây/hộp màu xanh",
                            Name = "Bút bi Thiên Long",
                            price = 0
                        },
                        new
                        {
                            ProductID = 2L,
                            Description = "Thước kẻ 20cm hộp 30 cái",
                            Name = "Thước kẻ 20cm",
                            price = 0
                        },
                        new
                        {
                            ProductID = 3L,
                            Description = "Giấy in văn phòng 1 thùng 20 xấp",
                            Name = "Giấy in văn phòng",
                            price = 0
                        },
                        new
                        {
                            ProductID = 4L,
                            Description = "Bút lông viết bảng (màu xanh) hộp 10 cái",
                            Name = "Bút lông viết bảng (màu xanh)",
                            price = 0
                        },
                        new
                        {
                            ProductID = 5L,
                            Description = "Gôm/Bút tẩy xóa",
                            Name = "Gôm/Bút tẩy xóa",
                            price = 0
                        },
                        new
                        {
                            ProductID = 6L,
                            Description = "Dao kéo, Băng keo",
                            Name = "Dao kéo, Băng keo",
                            price = 0
                        },
                        new
                        {
                            ProductID = 7L,
                            Description = "Túi đựng hồ sơ và tài liệu",
                            Name = "Túi đựng hồ sơ và tài liệu",
                            price = 0
                        },
                        new
                        {
                            ProductID = 8L,
                            Description = "Sổ tay học từ vựng",
                            Name = "Sổ tay học từ vựng",
                            price = 0
                        });
                });

            modelBuilder.Entity("QuanLyKho.Model.Stock", b =>
                {
                    b.Property<int>("StockID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockID"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("StockID");

                    b.ToTable("Stocks");

                    b.HasData(
                        new
                        {
                            StockID = 1,
                            Address = "639 Phạm Văn Bạch, Phường 15, Tân Bình, TPHCM",
                            Name = "Kho A"
                        },
                        new
                        {
                            StockID = 2,
                            Address = "200 Dương Đình Hội, Phường Phước Long B, Q.9, TPHCM",
                            Name = "Kho B"
                        });
                });

            modelBuilder.Entity("QuanLyKho.Model.StockDetail", b =>
                {
                    b.Property<int>("StockDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockDetailID"));

                    b.Property<long>("ProductID")
                        .HasColumnType("bigint");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("StockID")
                        .HasColumnType("int");

                    b.Property<int>("UnitID")
                        .HasColumnType("int");

                    b.HasKey("StockDetailID");

                    b.HasIndex("ProductID");

                    b.HasIndex("StockID");

                    b.HasIndex("UnitID");

                    b.ToTable("StockDetails");
                });

            modelBuilder.Entity("QuanLyKho.Model.Unit", b =>
                {
                    b.Property<int>("UnitID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UnitID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UnitID");

                    b.ToTable("Units");

                    b.HasData(
                        new
                        {
                            UnitID = 1,
                            Name = "Hộp"
                        },
                        new
                        {
                            UnitID = 2,
                            Name = "Cái"
                        },
                        new
                        {
                            UnitID = 3,
                            Name = "Thùng"
                        },
                        new
                        {
                            UnitID = 4,
                            Name = "Chiếc"
                        },
                        new
                        {
                            UnitID = 5,
                            Name = "Ram"
                        },
                        new
                        {
                            UnitID = 6,
                            Name = "Xấp"
                        });
                });

            modelBuilder.Entity("QuanLyKho.Model.ExportBill", b =>
                {
                    b.HasOne("QuanLyKho.Model.Administrator", "Administrator")
                        .WithMany("exportBills")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Customer", "Customer")
                        .WithMany("exportBills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrator");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("QuanLyKho.Model.ExportBillDetail", b =>
                {
                    b.HasOne("QuanLyKho.Model.ExportBill", "ExportBill")
                        .WithMany("exportBillDetails")
                        .HasForeignKey("ExportBillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.StockDetail", "StockDetail")
                        .WithMany("ExportProducts")
                        .HasForeignKey("StockDetailID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExportBill");

                    b.Navigation("StockDetail");
                });

            modelBuilder.Entity("QuanLyKho.Model.ImportBill", b =>
                {
                    b.HasOne("QuanLyKho.Model.Administrator", "Administrator")
                        .WithMany("ImportBills")
                        .HasForeignKey("AdministratorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Customer", "Customer")
                        .WithMany("importBills")
                        .HasForeignKey("CustomerID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Stock", "Stock")
                        .WithMany("ImportBill")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Administrator");

                    b.Navigation("Customer");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("QuanLyKho.Model.ImportDetail", b =>
                {
                    b.HasOne("QuanLyKho.Model.ImportBill", "ImportBill")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ImportBillID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Product", "Product")
                        .WithMany("ImportDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Unit", "Unit")
                        .WithMany("ImportDetails")
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ImportBill");

                    b.Navigation("Product");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("QuanLyKho.Model.StockDetail", b =>
                {
                    b.HasOne("QuanLyKho.Model.Product", "Product")
                        .WithMany("StockDetails")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Stock", "Stock")
                        .WithMany("StockDetails")
                        .HasForeignKey("StockID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuanLyKho.Model.Unit", "Unit")
                        .WithMany("StockDetails")
                        .HasForeignKey("UnitID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Stock");

                    b.Navigation("Unit");
                });

            modelBuilder.Entity("QuanLyKho.Model.Administrator", b =>
                {
                    b.Navigation("ImportBills");

                    b.Navigation("exportBills");
                });

            modelBuilder.Entity("QuanLyKho.Model.Customer", b =>
                {
                    b.Navigation("exportBills");

                    b.Navigation("importBills");
                });

            modelBuilder.Entity("QuanLyKho.Model.ExportBill", b =>
                {
                    b.Navigation("exportBillDetails");
                });

            modelBuilder.Entity("QuanLyKho.Model.ImportBill", b =>
                {
                    b.Navigation("ImportDetails");
                });

            modelBuilder.Entity("QuanLyKho.Model.Product", b =>
                {
                    b.Navigation("ImportDetails");

                    b.Navigation("StockDetails");
                });

            modelBuilder.Entity("QuanLyKho.Model.Stock", b =>
                {
                    b.Navigation("ImportBill");

                    b.Navigation("StockDetails");
                });

            modelBuilder.Entity("QuanLyKho.Model.StockDetail", b =>
                {
                    b.Navigation("ExportProducts");
                });

            modelBuilder.Entity("QuanLyKho.Model.Unit", b =>
                {
                    b.Navigation("ImportDetails");

                    b.Navigation("StockDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
